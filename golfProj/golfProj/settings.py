"""
Django settings for golfProj project.

Generated by 'django-admin startproject' using Django 2.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')
STATIC_DIR = os.path.join(BASE_DIR, 'static')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

#from google.cloud.runtimeconfig._helpers import variable_name_from_full_name
#import google.cloud.runtimeconfig as runtimeconfig

#config_client = runtimeconfig.Client()
#print (config_client)

# SECURITY WARNING: keep the secret key used in production secret!
#print ('environ', os.environ)
SECRET_KEY = os.environ.get('gcp_golf_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
if os.environ.get("DEBUG") == "True":
    DEBUG = True
else:
   DEBUG = False
   ## change this to false before going live!


ALLOWED_HOSTS = ['127.0.0.1', 'golf-pick-em.appspot.com', 'jflynn87g.pythonanywhere.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mathfilters',
    'django_select2',
    'bootstrapform',
    'django.contrib.humanize',
    'golf_app',


]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'golfProj.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR,],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'golfProj.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
#}

import pymysql  # noqa: 402
pymysql.install_as_MySQLdb()

# [START db_setup]
#if os.getenv('GAE_APPLICATION', None):

if os.environ.get("DEBUG") != "True":
     # Running on production App Engine, so connect to Google Cloud SQL using
     # the unix socket at /cloudsql/<your-cloudsql-connection string>

     print ('connecting prod')
     DATABASES = {
         'default': {
             'ENGINE': 'django.db.backends.mysql',
             'HOST': 'jflynn87g.mysql.pythonanywhere-services.com',
             'USER': os.environ.get('gcp_golf_db_user'),
             'PASSWORD': os.environ.get('gcp_golf_db_password'),
             'NAME': 'jflynn87g$games',
             'OPTIONS': {
                         'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
                         },

         }
     }
else:
     # Running locally so connect to either a local MySQL instance or connect to
     # Cloud SQL via the proxy. To start the proxy via command line:
     #
     #     $ cloud_sql_proxy -instances=[INSTANCE_CONNECTION_NAME]=tcp:3307 (was 3306 but that is used on my machine)
     #
     # See https://cloud.google.com/sql/docs/mysql-connect-proxy
     print ('connecting local')
     # Google settings
     # DATABASES = {
     #     'default': {
     #         'ENGINE': 'django.db.backends.mysql',
     #         'HOST': '127.0.0.1',
     #         'PORT': '3306',
     #         'NAME':  'games',
     #         'USER': os.environ.get('gcp_golf_db_user'),
     #         'PASSWORD': os.environ.get('gcp_golf_db_password'),
     #     }
     # }
     # end google settings
     DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
           'NAME':  'games',
           'USER': os.environ.get('gcp_golf_db_user'),
           'PASSWORD': os.environ.get('gcp_golf_db_password'),
           'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            },

        }
     }
# [END db_setup]



# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'


STATICFILES_DIRS = [
    STATIC_DIR,
]

EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
user = os.environ.get('gcp_golf_email_id')
pwd = os.environ.get('gcp_golf_email_password')


# using debug setting to determine test vs. prod
if DEBUG  == True:
    user_no_quotes = user.strip("'")
    pwd_no_quotes= pwd.strip("'")
    EMAIL_HOST_USER = user_no_quotes
    EMAIL_HOST_PASSWORD = pwd_no_quotes
else:
    EMAIL_HOST_USER = user
    EMAIL_HOST_PASSWORD = pwd

EMAIL_PORT = 587

STATIC_ROOT = STATIC_DIR
STATIC_ROOT = os.path.join(STATIC_DIR, 'collected_static')
LOGIN_REDIRECT_URL = 'index'
LOGOUT_REDIRECT_URL = 'index'

INTERNAL_IPS = ['127.0.0.1']
